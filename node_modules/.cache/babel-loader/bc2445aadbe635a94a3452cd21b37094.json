{"ast":null,"code":"var _jsxFileName = \"/home/admin-pc/egor/winterorbit/winter-orbit/src/i2-features/f4-course/c1-ui/Course.tsx\";\nimport React, { useState } from 'react';\nimport s from './Course.module.css';\nimport { useParams } from 'react-router-dom';\nimport { getCourse } from '../c2-bll/courses';\n\nconst Course = ({}) => {\n  const {\n    id: lesson_id\n  } = useParams();\n  const [lesson, setLesson] = useState(0);\n  const [selectedTerm, selectTerm] = useState('');\n  const course = getCourse(lesson_id);\n  let mappedLesson = 'error';\n  let term = 'none';\n\n  if (course !== 'error' && course.lessons.length > lesson) {\n    mappedLesson = course.lessons[lesson].content.map(c => {\n      switch (c.type) {\n        case 'div':\n          {\n            let content = c.content.map(i => {\n              switch (i.type) {\n                case 'span':\n                  {\n                    return /*#__PURE__*/React.createElement(\"span\", {\n                      key: i._id,\n                      style: i.style,\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 25,\n                        columnNumber: 40\n                      }\n                    }, i.text, \"\\xA0\");\n                  }\n\n                case 'term':\n                  {\n                    return /*#__PURE__*/React.createElement(\"span\", {\n                      key: i._id,\n                      style: i.style,\n                      onClick: () => {\n                        const term = course.terms.find(t => t.word === i.text) || 'error';\n                        selectTerm(term !== 'error' ? term._id : '');\n                      },\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 29,\n                        columnNumber: 37\n                      }\n                    }, i.text, \"\\xA0\");\n                  }\n\n                default:\n                  return null;\n              }\n            });\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: c._id,\n              style: c.style,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }\n            }, content);\n          }\n\n        default:\n          return null;\n      }\n    });\n    const termObject = course.terms.find(t => t._id === selectedTerm) || 'error';\n\n    if (termObject !== 'error') {\n      term = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, termObject.word), \" - \", termObject.text);\n    }\n  }\n\n  const setLessonMinus = () => {\n    if (lesson > 0) setLesson(lesson - 1);\n  };\n\n  const setLessonPlus = () => {\n    if (course !== 'error' && course.lessons.length > lesson + 1) setLesson(lesson + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.lessonBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.lesson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, mappedLesson), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setLessonMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"\\u041A \\u043F\\u0440\\u043E\\u0448\\u043B\\u043E\\u043C\\u0443 \\u0443\\u0440\\u043E\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setLessonPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"\\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0435\\u0435 \\u0437\\u0430\\u043D\\u044F\\u0442\\u0438\\u0435\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.leftBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dictionary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, term), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.hints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"\\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0438\")));\n};\n\nexport default Course;","map":{"version":3,"sources":["/home/admin-pc/egor/winterorbit/winter-orbit/src/i2-features/f4-course/c1-ui/Course.tsx"],"names":["React","useState","s","useParams","getCourse","Course","id","lesson_id","lesson","setLesson","selectedTerm","selectTerm","course","mappedLesson","term","lessons","length","content","map","c","type","i","_id","style","text","terms","find","t","word","termObject","color","setLessonMinus","setLessonPlus","page","lessonBlock","buttons","leftBlock","dictionary","hints"],"mappings":"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","sourcesContent":["import React, {ReactNode, useState} from 'react'\nimport s from './Course.module.css'\nimport {useParams} from 'react-router-dom'\nimport {getCourse} from '../c2-bll/courses'\n\ntype CoursePropsType = {}\n\nconst Course: React.FC<CoursePropsType> = ({}) => {\n    const {id: lesson_id} = useParams()\n    const [lesson, setLesson] = useState<number>(0)\n    const [selectedTerm, selectTerm] = useState<string>('')\n\n    const course = getCourse(lesson_id)\n    let mappedLesson: ReactNode = 'error'\n\n    let term: ReactNode = 'none'\n\n    if (course !== 'error' && course.lessons.length > lesson) {\n        mappedLesson = course.lessons[lesson].content.map(c => {\n            switch (c.type) {\n                case 'div': {\n                    let content = c.content.map(i => {\n                        switch (i.type) {\n                            case 'span': {\n                                return <span key={i._id} style={i.style}>{i.text}&nbsp;</span>\n                            }\n                            case 'term': {\n                                return (\n                                    <span\n                                        key={i._id}\n                                        style={i.style}\n                                        onClick={() => {\n                                            const term = course.terms.find(t => t.word === i.text) || 'error'\n\n                                            selectTerm(term !== 'error' ? term._id : '')\n                                        }}\n                                    >\n                                    {i.text}&nbsp;\n                                </span>\n                                )\n                            }\n                            default:\n                                return null\n                        }\n                    })\n\n                    return (\n                        <div key={c._id} style={c.style}>\n                            {content}\n                        </div>\n                    )\n                }\n                default:\n                    return null\n            }\n        })\n\n        const termObject = course.terms.find(t => t._id === selectedTerm) || 'error'\n        if (termObject !== 'error') {\n            term = (\n                <div>\n                    <span style={{color: 'red'}}>{termObject.word}</span> - {termObject.text}\n                </div>\n            )\n        }\n    }\n\n    const setLessonMinus = () => {\n        if (lesson > 0) setLesson(lesson - 1)\n    }\n    const setLessonPlus = () => {\n        if (course !== 'error' && course.lessons.length > lesson + 1)\n        setLesson(lesson + 1)\n    }\n\n    return (\n        <div className={s.page}>\n            <div className={s.lessonBlock}>\n                <div className={s.lesson}>\n                    {mappedLesson}\n                </div>\n\n                <div className={s.buttons}>\n                    <button onClick={setLessonMinus}>К прошлому уроку</button>\n                    <button onClick={setLessonPlus}>следующее занятие</button>\n                </div>\n            </div>\n\n            <div className={s.leftBlock}>\n                <div className={s.dictionary}>\n                    {term}\n                </div>\n\n                <div className={s.hints}>\n                    подсказки\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Course\n"]},"metadata":{},"sourceType":"module"}